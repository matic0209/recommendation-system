apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: recommendation-ingress
  namespace: recommendation
  annotations:
    # Nginx ingress annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Rate limiting (requests per second per IP)
    nginx.ingress.kubernetes.io/limit-rps: "100"

    # Connection limits
    nginx.ingress.kubernetes.io/limit-connections: "20"

    # Request size limit
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"

    # Timeout settings
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "5"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"

    # CORS (if needed)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"

    # Health check
    nginx.ingress.kubernetes.io/health-check-path: "/health"

    # TLS certificate (use cert-manager in production)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.recommendation.example.com
    secretName: recommendation-tls
  rules:
  - host: api.recommendation.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: recommendation-api
            port:
              number: 80
